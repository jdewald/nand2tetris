// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux4Way.hdl

/**
 * 4-way demultiplexor:
 * {a, b, c, d} = {in, 0, 0, 0} if sel == 00
 *                {0, in, 0, 0} if sel == 01
 *                {0, 0, in, 0} if sel == 10
 *                {0, 0, 0, in} if sel == 11
 */

CHIP DMux4Way {
    IN in, sel[2];
    OUT a, b, c, d;

    PARTS:
	/*
	* Initially thought I could do a chain of DMux here like the
	* strategy for Mux4Way, but I can't visualize how to make that happen
	* Instead, I think we need to basically implement the full DMux
	*/
	Not(in = sel[0], out=selAorC);
	Not(in = sel[1], out=selAorB);
	And(a = sel[0], b = sel[1], out = selD);
	And(a = sel[1], b = selAorC, out = selC);
	And(a = sel[0], b = selAorB, out = selB);
	And(a = selAorC, b = selAorB, out = selA);
	And(a = in, b=selA, out=a);
	And(a = in, b=selB, out=b);
	And(a = in, b=selC, out=c);
	And(a = in, b=selD, out=d);
}
